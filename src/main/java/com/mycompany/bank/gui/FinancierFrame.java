/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.bank.gui;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

import com.mycompany.bank.db.FinancierService;
import com.mycompany.bank.db.ClientService;
import com.mycompany.bank.db.BidService;
import com.mycompany.bank.db.ResponseFinancierService;
import com.mycompany.bank.businessLogic.Financier;
import com.mycompany.bank.businessLogic.ResponseFinancier;
import com.mycompany.bank.businessLogic.Bid;
import com.mycompany.bank.businessLogic.Client;
import java.util.List;
import java.text.SimpleDateFormat;
/**
 *
 * @author ann
 */
public class FinancierFrame extends JFrame {
    private ButtonGroup buttonGroup = new ButtonGroup();

    /**
     * Creates new form FinancierFrame
     */
    public FinancierFrame(int id) {
        super("Финансист ID: "+ id);
        initComponents();
        setLocationRelativeTo(null);
        SimpleDateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        Financier financier=FinancierService.findFinancierById(id);
        nameFinancier.setText("Здравствуйте, "+ financier.getName());
        List<Client> clients = ClientService.getAllClients();
        BidService.setBidForClient(clients);
        clientBox.removeAllItems();
        for( Client client : clients ) {
            clientBox.addItem( client.getName());
            List<Bid> bids=client.getBids();
        }
        bidBox.removeAllItems();
        Client client = clients.get(0);
        Bid bid = client.getBid(0);
        initFrame(client, bid, df);
        
        checkClient.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            bidBox.removeAllItems();
            String nameClient = clientBox.getSelectedItem().toString();
            Client client = Client.getClientByName(clients, nameClient);
            revenue.setText("Доход клиента (руб/месяц): "+client.getRevenue());
            rating.setText("Рейтинг клиента: "+client.getRating());
            for (int i = 0; i < client.getBids().size(); i++)
                bidBox.addItem("Заявка № "+ (i+1));
        }});  
        
        checkBid.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            String stringBid = bidBox.getSelectedItem().toString().replaceAll("[\\D]", "");
            int numberBid = Integer.parseInt(stringBid);
            Bid bid = client.getBid(numberBid-1);
            sum.setText("Сумма кредита: "+bid.getSum());
            date.setText("Дата заявки: "+df.format(bid.getDate()));
        }}); 
        
        acceptField.setActionCommand("true");
        refuseField.setActionCommand("false");
        buttonGroup.add(acceptField);
        buttonGroup.add(refuseField);
        int answer;
        acceptField.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            percentField.setVisible(true);
            timeField.setVisible(true);
        }}); 
        refuseField.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            percentField.setVisible(false);
            timeField.setVisible(false);
        }}); 
        
        answerField.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            try {
                int bid_id = BidService.getId(client.getId(), id, bid.getSum());
                Boolean answer = Boolean.parseBoolean(buttonGroup.getSelection().getActionCommand());
                int percent;
                int time;
                if(answer) {
                    percent=  Integer.parseInt(percentField.getText());
                    time =  Integer.parseInt(timeField.getText());
                }
                else
                    percent=time =0;
                ResponseFinancier responseFinancier = ResponseFinancierService.createNewResponseFinancier(bid_id, id, answer, percent, time);
               }
            catch (Exception nfe) {
                JOptionPane.showMessageDialog(null, "Процент и время - числовые значения.");
            } 
        }}); 
        
    }
    
     public void initFrame(Client client, Bid bid, SimpleDateFormat df) {
        bidBox.addItem("Заявка № "+ 1);
        revenue.setText("Доход клиента (руб/месяц): "+client.getRevenue());
        rating.setText("Рейтинг клиента: "+client.getRating());
        sum.setText("Сумма кредита: "+bid.getSum());
        date.setText("Дата заявки: "+df.format(bid.getDate()));
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientBox = new javax.swing.JComboBox<>();
        revenue = new javax.swing.JLabel();
        rating = new javax.swing.JLabel();
        sum = new javax.swing.JLabel();
        bidBox = new javax.swing.JComboBox<>();
        checkClient = new javax.swing.JButton();
        checkBid = new javax.swing.JButton();
        nameFinancier = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        refuseField = new javax.swing.JCheckBox();
        acceptField = new javax.swing.JCheckBox();
        percentField = new javax.swing.JTextField();
        timeField = new javax.swing.JTextField();
        answerField = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clientBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientBoxActionPerformed(evt);
            }
        });

        revenue.setText("Доход клиента (руб/месяц): ");

        rating.setText("Рейтинг клиента: ");

        sum.setText("Сумма кредита: ");

        bidBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bidBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidBoxActionPerformed(evt);
            }
        });

        checkClient.setText("Выбрать клиента");

        checkBid.setText("Выбрать заявку");

        nameFinancier.setText("jLabel2");

        date.setText("Дата заявки:");

        jLabel1.setText("Процент: ");

        jLabel2.setText("Срок (количество месяцев): ");

        refuseField.setText("Отказать");

        acceptField.setText("Одобрить");

        answerField.setText("Ответить");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(date)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameFinancier)
                            .addComponent(rating)
                            .addComponent(sum)
                            .addComponent(revenue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clientBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bidBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkBid, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(refuseField)
                            .addComponent(acceptField))
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timeField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(percentField)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(answerField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(nameFinancier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkBid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bidBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(revenue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rating))
                    .addComponent(checkClient, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sum)
                .addGap(18, 18, 18)
                .addComponent(date)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(acceptField)
                    .addComponent(percentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(refuseField)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answerField)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientBoxActionPerformed

    private void bidBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bidBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox acceptField;
    private javax.swing.JButton answerField;
    private javax.swing.JComboBox<String> bidBox;
    private javax.swing.JButton checkBid;
    private javax.swing.JButton checkClient;
    private javax.swing.JComboBox<String> clientBox;
    private javax.swing.JLabel date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel nameFinancier;
    private javax.swing.JTextField percentField;
    private javax.swing.JLabel rating;
    private javax.swing.JCheckBox refuseField;
    private javax.swing.JLabel revenue;
    private javax.swing.JLabel sum;
    private javax.swing.JTextField timeField;
    // End of variables declaration//GEN-END:variables
}
